table(datMain2$patient, datMain2$measurement)
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
sweepMeans = function(dat){
dat_ = as.matrix(dat[,1:10])
print(class(dat))
print(class(dat_))
print(dat)
sweeper = colMeans(dat)
out = sweep(dat_, 2, sweeper)
as.data.frame(rbind(out, dat[,11:12]))
}
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
sweepMeans = function(dat){
dat_ = as.matrix(dat[,1:10])
print(dat)
print(dat_)
sweeper = colMeans(dat)
out = sweep(dat_, 2, sweeper)
as.data.frame(rbind(out, dat[,11:12]))
}
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
sweepMeans = function(dat){
dat_ = as.matrix(dat[,1:10])
#print(dat)
#print(dat_)
sweeper = colMeans(dat_)
out = sweep(dat_, 2, sweeper)
as.data.frame(rbind(out, dat[,11:12]))
}
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
sweepMeans = function(dat){
dat_ = as.matrix(dat[,1:10])
#print(dat)
#print(dat_)
sweeper = colMeans(dat_)
out = sweep(dat_, 2, sweeper)
rbind(as.data.frame(out), dat[,11:12])
}
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
sweepMeans = function(dat){
dat_ = as.matrix(dat[,1:10])
#print(dat)
#print(dat_)
sweeper = colMeans(dat_)
out = sweep(dat_, 2, sweeper)
as.data.frame(out)
}
datFinal = ddply(datMain2, c("patient"), .fun= sweepMeans)
datFinal2 = as.matrix(datFinal[,1:10])
do_PCA_Plot(datFinal2, datMain2$measurement)
head(datFinal2)
head(datFinal1)
head(datFinal)
datFinal2 = as.matrix(datFinal[,2:11])
do_PCA_Plot(datFinal2, datMain2$measurement)
head(datFinal)
head(datFinal2)
boxplot(datMain2[,1] ~ datMain2$measurement )
boxplot(datMain2[,2] ~ datMain2$measurement )
boxplot(datMain2[,3] ~ datMain2$measurement )
boxplot(datMain2[,4] ~ datMain2$measurement )
boxplot(datMain2[,5] ~ datMain2$measurement )
boxplot(datMain2[,6] ~ datMain2$measurement )
boxplot(datMain2[,7] ~ datMain2$measurement )
boxplot(datMain2[,8] ~ datMain2$measurement )
load("~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/AllImported.RData")
source("~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/Plots.R")
ls()
dim(allMeta)
meta_
dim(meta_)
dim(dataBinned)
acceptedNames = c(1,2,4,10:20,67,68,69,70,79,82,88,90:113,115,129:137,151,155,162,167,190,191,194:208,225,234,254,255)
length(acceptedNames)
PBPVfilter = which(newMeta$category %in% c('PB','PV'))
allMeta = allMeta[-PBPVfilter,]
newMeta = newMeta[-PBPVfilter,]
dataBinned = dataBinned[-PBPVfilter,]
dataBinnedSub = dataBinnedSub[-PBPVfilter,]
do_PCA_Plot(dataBinned, rep("Ungrouped", nrow(dataBinned)), pcs=c(1,2), useLabels = T, labels = newMeta$ID, col=gg_color_hue(4))
library(ggplot2)
do_PCA_Plot(dataBinned, rep("Ungrouped", nrow(dataBinned)), pcs=c(1,2), useLabels = T, labels = newMeta$ID, col=gg_color_hue(4))
library(ellipse)
do_PCA_Plot(dataBinned, rep("Ungrouped", nrow(dataBinned)), pcs=c(1,2), useLabels = T, labels = newMeta$ID, col=gg_color_hue(4))
do_PCA_Plot(dataBinned, rep("Ungrouped", nrow(dataBinned)), pcs=c(1,3), useLabels = T, labels = newMeta$ID, col=gg_color_hue(4))
outliers = which(newMeta$ID %in% as.character(c(120,127,134,145)))
allMeta = allMeta[-outliers,]
newMeta = newMeta[-outliers,]
dataBinned = dataBinned[-outliers,]
dataBinnedSub = dataBinnedSub[-outliers,]
do_PCA_Plot(dataBinned, newMeta$category, pcs=c(1,2), col=gg_color_hue(4))
do_PCA_Plot(dataBinned, newMeta$category, pcs=c(1,3), col=gg_color_hue(4))
Ufilter = which(newMeta$category == 'U')
Cfilter = which(newMeta$category == 'C')
allMeta_NU = allMeta[-Ufilter,]
newMeta_NU = newMeta[-Ufilter,]
dataBinned_NU = dataBinned[-Ufilter,]
dataBinnedSub_NU = dataBinnedSub[-Ufilter,]
allMeta_NUC = allMeta[-c(Ufilter,Cfilter),]
newMeta_NUC = newMeta[-c(Ufilter,Cfilter),]
dataBinned_NUC = dataBinned[-c(Ufilter,Cfilter),]
dataBinnedSub_NUC = dataBinnedSub[-c(Ufilter,Cfilter),]
inf_Ninf = rep('Inf-',nrow(newMeta))
inf_Ninf[newMeta$category != 'C'] = 'Inf+'
do_PCA_Plot(dataBinned, inf_Ninf, col=gg_color_hue(2))
do_PCA_Plot(dataBinned, inf_Ninf, col=gg_color_hue(2), pcs=c(1,3))
do_PCA_Plot(dataBinned, inf_Ninf, col=gg_color_hue(2), pcs=c(2,3))
require(adegenet)
library(adegenet)
install.packages(adegenet)
install.packages('adegenet')
install.packages('adegenet')
patients
dim(dataBinned)
dim(meta_)
meta_$ID#
all(patients==meta_$ID)
meta_ = meta_[,acceptedNames]
dim(meta_)
allMeta = meta_
allMeta = allMeta[-PBPVfilter,]
allMeta = allMeta[-outliers,]
dim(allMeta)
names(allMeta)
ls()
dim(allMeta_NU)
dim(dataBinned_NU)
names(allMeta)
colSums(is.na(allMeta))
colSums(is.na(allMeta_NUC))
dim(allMeta_NUC
)
allMeta_NU = allMeta[-Ufilter,]
allMeta_NUC = allMeta[-c(Ufilter,Cfilter),]
dim(allMeta_NUC
)
colSums(is.na(allMeta_NUC))
set.seed(10)
names(newMeta)
newMeta$Confirmed.Infection
lassoReg_ini = glmnet(scale(as.matrix(dataBinned)), newMeta_NUC$Confirmed.Infection, alpha=1, lambda=grid, family = 'binomial')
library(glmnet)
lassoReg_ini = glmnet(scale(as.matrix(dataBinned)), newMeta_NUC$Confirmed.Infection, alpha=1, lambda=grid, family = 'binomial')
lassoReg_ini = glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, lambda=grid, family = 'binomial')
lassoReg_ini = glmnet(scale(as.matrix(dataBinned)), as.factor(newMeta$Confirmed.Infection), alpha=1, lambda=grid, family = 'binomial')
cv.lassoReg = cv.glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, family = 'binomial')
plot(cv.lassoReg)
best.lambda = cv.lassoReg$lambda.min
cv.lassoReg_nin = cv.glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, family = 'binomial')
set.seed(1)
cv.lassoReg_nin = cv.glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, family = 'binomial')
plot(cv.lassoReg_nin)
best.lambda_nin = cv.lassoReg$lambda.min
lassoReg.impr_nin = cv.glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, lambda = grid, family = 'binomial')
lasso.pred_nin = predict(lassoReg.impr_nin, type='coefficients', s=best.lambda)
grid=10^seq(10,-2, length =100)
lassoReg.impr_nin = cv.glmnet(scale(as.matrix(dataBinned)), newMeta$Confirmed.Infection, alpha=1, lambda = grid, family = 'binomial')
lasso.pred_nin = predict(lassoReg.impr_nin, type='coefficients', s=best.lambda)
lasso.pred_nin
nonZeroCoeff_nin = which(lasso.pred != 0)
nonZeroCoeff_nin = which(lasso.pred_nin != 0)
metabs.Lasso_nin = colnames(dataBinned)[nonZeroCoeff_nin]
lasso.selected_nin = data.frame(bin = colnames(dataBinned)[nonZeroCoeff_nin], lasso.coeff=lasso.pred_nin[lasso.pred_nin != 0])
lasso.selected_nin = lasso.selected_nin[order(lasso.selected_nin[,2]),]
lasso.selected_nin
ggplot(lasso.selected_nin, aes(x=reorder(bin,lasso.coeff), y=lasso.coeff))+
geom_bar(stat='identity')+
theme_bw()+
coord_flip()+
ggtitle('Lasso regression coefficients (inf-non_inf)')+
xlab('Bins')+
ylab('Coefficients')
do_PCA_Plot(dataBinned[,nonZeroCoeff_nin], newMeta$Confirmed.Infection, col=gg_color_hue(4)[1:3])
do_PCA_Plot(dataBinned[,nonZeroCoeff_nin], newMeta$Confirmed.Infection, pcs=c(1,3), col=gg_color_hue(4)[1:3], useLabels = T, labels=newMeta_NU$ID)
do_PCA_Plot(dataBinned[,nonZeroCoeff_nin], newMeta$Confirmed.Infection, pcs=c(1,3), col=gg_color_hue(4)[1:3], useLabels = T, labels=newMeta$ID)
do_PCA_Plot(dataBinned[,nonZeroCoeff_nin], newMeta$Confirmed.Infection, pcs=c(2,3), col=gg_color_hue(4)[1:3], useLabels = T, labels=newMeta$ID)
do_PCA_Plot(dataBinned[,nonZeroCoeff_nin], newMeta$Confirmed.Infection, col=gg_color_hue(4)[1:3])
length(nonZeroCoeff_nin)
plsdaAll_nin = do_PLSDA(scale(dataBinned[nonZeroCoeff_nin]), as.factor(newMeta$Confirmed.Infection))
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plsdaAll_nin = do_PLSDA(scale(dataBinned[nonZeroCoeff_nin]), as.factor(newMeta$Confirmed.Infection))
install.packages('caret')
plsdaAll_nin = do_PLSDA(scale(dataBinned[nonZeroCoeff_nin]), as.factor(newMeta$Confirmed.Infection))
install.packages('caret')
library(caret)
plsdaAll_nin = do_PLSDA(scale(dataBinned[nonZeroCoeff_nin]), as.factor(newMeta$Confirmed.Infection))
library(caret)
ls()
library(caret)
library(caret)
rm(list=ls())
library(caret)
library(caret)
ls()
names(allMeta)
head(allMeta)
table(allMeta$X_BP)
set.seed(10)
inTrain = sample(1:nrow(dataBinned),floor(0.75*nrow(dataBinned)))
inTrain
set.seed(101)
inTrain = sample(1:nrow(dataBinned),floor(0.75*nrow(dataBinned)))
dataLasso = scale(dataBinned)
trData = as.matrix(dataBinned[inTrain,])
tsData = as.matrix(dataBinned[-inTrain,])
LOStr = LOS[inTrain]
names(allMeta)[58]
LOS = allMeta[,58]
LOS.NUC = allMeta_NUC[,58]
LOStr = LOS[inTrain]
LOSts = LOS[-inTrain]
aov.LOS = aov(LOS~newMeta$category)
anova.LOS = anova(aov.LOS)
posthoc.res<-TukeyHSD(aov.LOS, conf.level=0.95)
grid=10^seq(10,-2, length =100)
lassoReg = glmnet(trData, LOStr, alpha=1, lambda=grid)
library(glmnet)
lassoReg = glmnet(trData, LOStr, alpha=1, lambda=grid)
plot(lassoReg, label=T)
set.seed(1)
cv.lassoReg = cv.glmnet(trData, LOStr, alpha=1)
plot(cv.lassoReg)
best.lambda = cv.lassoReg$lambda.min
lassoReg.impr = cv.glmnet(trData, LOStr, alpha=1, lambda = -2)
lassoReg.impr = cv.glmnet(trData, LOStr, alpha=1, lambda = grid)
lasso.pred = predict(lassoReg.impr, type='coefficients', s=-2)
lasso.pred
nonZeroCoeff.LOS = which(lasso.pred != 0)
metabs.Lasso.LOS = colnames(dataBinned)[nonZeroCoeff.LOS]
metabs.Lasso.LOS
lasso.pred
lassoReg.tr = cv.glmnet(trData, LOStr, alpha=0, lambda = grid)
plot(lassoReg.tr)
lasso.pred.tr = predict(lassoReg.tr, s=6, newx = trData)
lasso.pred.ts = predict(lassoReg.tr, s=6, newx = tsData)
mean((lasso.pred.ts-LOSts)^2)
sum((LOSts-mean(LOSts))^2)
sum((lasso.pred.ts-LOSts)^2)
1102/1351
names(metaAll)
names(allMeta)
boxplot(LOS ~ newMeta$Confirmed.Infection)
boxplot(LOS ~ newMeta$Sepsis.Category)
boxplot(LOS ~ newMeta$TYPE.OF.INFECTION)
names(allMeta)
plot(density(LOS))
plot(density(log(LOS)))
LOS
hist(LOS)
median(LOS)
hist(LOS, breaks=20)
hist(LOS, breaks=25)
hist(LOS, breaks=35)
LOSbin = cut(LOS, breaks=c(0,5,50))
LOSbin
do_PCA_Plot(dataBinned, LOSbin)
library(ggplot2)
do_PCA_Plot(dataBinned, LOSbin)
library(ellipse)
do_PCA_Plot(dataBinned, LOSbin)
library(caret)
detach("package:lattice", unload=TRUE)
detach("lattice", unload=TRUE)
detach("package:lattice", unload=TRUE)
?unload
?detach
detach("package:Matrix", unload=TRUE)
detach("package:glmnet", unload=TRUE)
detach("package:Matrix", unload=TRUE)
library(caret)
plsdaLOS = do_PLSDA(scale(dataBinned), LOSbin)
library(pls)
plsdaLOS = do_PLSDA(scale(dataBinned), LOSbin)
plot_PLSDA(plsdaInters, newMeta_NUC$category ,type='scores')
plot_PLSDA(plsdaLOS, LOS,type='scores')
plot_PLSDA(plsdaLOS, LOSbin,type='scores')
plot_PLSDA(plsdaLOS, LOSbin,type='VIP')
plot_PLSDA(plsdaLOS, LOSbin,type='scores')
plot_PLSDA(plsdaLOS, newMeta$Confirmed.Infection,type='scores')
LOS_NUCbin = cut(LOS_NUC, breaks=c(0,5,50))
LOS.NUC = allMeta_NUC[,58]
LOS_NUCbin = cut(LOS_NUC, breaks=c(0,5,50))
LOS_NUCbin = cut(LOS.NUC, breaks=c(0,5,50))
do_PCA_Plot(dataBinned_NUC, LOS_NUCbin)
plot_PLSDA(plsdaLOS, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS, LOS_NUCbin,type='scores')
plsdaLOS_NUC = do_PLSDA(scale(dataBinned), LOSbin)
plot_PLSDA(plsdaLOS, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOSbin,type='VIP')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
plsdaLOS_NUC$n.comp
plsdaLOS_NUC$VIPs
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
data.frame(x=1:5)
plot_PLSDA = function(plsdaObj, groups, comp=c(1,2), type='scores', legendName = 'Groups'){
#type = {scores, VIP, varImp} - only top <=20 plotted
if(type == 'scores'){
tmpData = data.frame(comp1 = plsdaObj$plsda.reg$scores[,comp[1]], comp2 = plsdaObj$plsda.reg$scores[,comp[2]], group = groups)
p = ggplot(data=tmpData, aes(x=comp1, y=comp2, col=groups))+
geom_point(size=3)
p = p+
theme_bw(base_size = 14)+
guides(col = guide_legend(title = legendName))
p = p+
xlab(paste('Component ', comp[1], sep=''))+
ylab(paste('Component ', comp[2], sep=''))+
ggtitle(paste('PLS-DA scores (',plsdaObj$n.comp,' comp.)',sep=''))
} else if(type == 'VIP'){
tmpData = plsdaObj$VIPs
if (is.null(dim(tmpData))) tmpData = as.data.frame(tmpData)
tmpData = tmpData[order(tmpData[,plsdaObj$n.comp]),]
n.vars = ifelse(nrow(tmpData) > 20, 20, nrow(tmpData))
tmpData = data.frame(vars = as.character(rownames(tmpData)[1:n.vars]), VIPs = tmpData[1:n.vars,plsdaObj$n.comp])
p = ggplot(data = tmpData, aes(x=reorder(vars, VIPs), y=VIPs))+
geom_point(size=4)
p = p+
theme_bw(base_size = 14)+
coord_flip()
p = p+
ylab('VIP score')+
xlab('Variable')+
ggtitle(paste('VIP scores for ',plsdaObj$n.comp,'-comp. PLS-DA model',sep=''))
} else if(type == 'varImp'){
n.vars = ifelse(nrow(plsdaObj$varImp) > 20, 20 , nrow(plsdaObj$varImp))
tmpData = data.frame(vars = as.character(rownames(plsdaObj$varImp)[1:n.vars]), varImp = plsdaObj$varImp[1:n.vars,1])
p = ggplot(data = tmpData, aes(x=reorder(vars, varImp), y=varImp))+
geom_point(size=4)
p = p+
theme_bw(base_size = 14)+
coord_flip()
p = p+
ylab('Variable importance score')+
xlab('Variable')+
ggtitle(paste('Variable importance scores for ',plsdaObj$n.comp,'-comp. PLS-DA model',sep=''))
}
p
}
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
X
X = matrix(1:10, 10,1)
nrow(X)
ifelse(nrow(X)>5,5,nrow(X))
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
ifelse(nrow(X)>5,5,nrow(X))
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
X
X[order(X[,1])]
source('~/Desktop/Enitan_05_12/drive-download-20161205T154922Z/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
source('~/Desktop/Enitan_05_12/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
source('~/Desktop/Enitan_05_12/PLSDA.R')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plsdaLOS_NUC$plsda.reg
plsdaLOS_NUC$plsda.res
plsdaLOS_NUC$plsda.cls
plsdaLOS = do_PLSDA(scale(dataBinned), LOSbin)
plot_PLSDA(plsdaLOS, newMeta$Confirmed.Infection,type='scores')
plot_PLSDA(plsdaLOS, LOSbin,type='VIP')
do_PCA_Plot(dataBinned_NUC, LOS_NUCbin)
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
hit(LOS)
hist(LOS)
hist(LOS, breaks=20)
hist(LOS, breaks=20, col='steelblue')
hist(LOS, breaks=30, col='steelblue')
hist(LOS, breaks=40, col='steelblue')
hist(LOS.NUC, breaks=40, col='steelblue')
hist(LOS.NUC, breaks=40, col='steelblue', main='Histogram of LOS (DB,DV only)')
hist(LOS.NUC, breaks=40, col='steelblue', main='Histogram of LOS (DB, DV only)')
abline(h=5)
abline(v=5)
hist(LOS.NUC, breaks=40, col='steelblue', main='Histogram of LOS (DB, DV only)')
abline(v=5, col='red', lty=2)
hist(LOS, breaks=40, col='steelblue', main='Histogram of LOS')
abline(v=5, col='red', lty=2)
hist(LOS.NUC, breaks=40, col='steelblue', main='Histogram of LOS (DB, DV only)')
abline(v=5, col='red', lty=2)
hist(LOS.NUC, breaks=40, col='steelblue', main='Histogram of LOS (DB, DV only)', xlab='LOS')
abline(v=5, col='red', lty=2)
plsdaLOS = do_PLSDA(scale(dataBinned), LOSbin)
plot_PLSDA(plsdaLOS, newMeta$Confirmed.Infection,type='scores')
plot_PLSDA(plsdaLOS, LOSbin,type='VIP')
plot_PLSDA(plsdaLOS, newMeta$Confirmed.Infection,type='scores')
lassoReg = glmnet(trData, LOStr, alpha=1, lambda=grid)
plot_PLSDA(plsdaLOS, newMeta$LOSbin,type='scores')
plsdaLOS = do_PLSDA(scale(dataBinned), LOSbin)
plot_PLSDA(plsdaLOS, newMeta$LOSbin,type='scores')
plot_PLSDA(plsdaLOS, LOSbin,type='scores')
plot_PLSDA(plsdaLOS, newMeta$Confirmed.Infection,type='scores')
do_PCA_Plot(dataBinned_NUC, LOS_NUCbin)
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='VIP')
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
plsdaLOS_NUC = do_PLSDA(scale(dataBinned_NUC), LOS_NUCbin)
plot_PLSDA(plsdaLOS_NUC, LOS_NUCbin,type='scores')
setdw('~/Projects/ProteoDNN/')
setwd('~/Projects/ProteoDNN/')
setwd('~/Projects/ProteoDNN/PTMdrag')
dataRaw = read.table('data/OxidationAll.txt', header=T, sep=',', stringsAsFactors = F)
dim(dataRaw)
ls()
rm(list=ls())
dataRaw = read.table('data/OxidationAll.txt', header=T, sep=',', stringsAsFactors = F)
dim(dataRaw)
names(dataRaw)
dataRaw[1:5,18:21]
data = dataRaw[dataRaw$X.L.Retention.Time..min. >= 20 & dataRaw$X.L.Retention.Time..min. <= 80,]
dim(dataRaw)
dim(data)
dataRaw = dataRaw[,1:20]
data = dataRaw[dataRaw$X.L.Retention.Time..min. >= 20 & dataRaw$X.L.Retention.Time..min. <= 80,]
names(data())
names(data
)
head(data)
head(data)
install.packages('protr')
library(protr)
names(data())
names(data
)
dataRaw = dataRaw[,1:20]
dataRaw[1:5,18:21]
dataRaw[1:5,]
pepLen = function(sqn){
length(splitstr(sqn,'')[[1]])
}
data$pepLen = sapply(data$Peptide, pepLen)
pepLen = function(sqn){
length(strsplit(sqn,'')[[1]])
}
data$pepLen = sapply(data$Peptide, pepLen)
dataRaw[1:5,18:21]
data[1:5,]
dataPep = dataRaw[dataRaw$X.L.Retention.Time..min. >= 20 & dataRaw$X.L.Retention.Time..min. <= 80,]
dataPep$pepLen = sapply(dataPep$Peptide, pepLen)
cor(dataPep$pepLen, dataPep$Retention..Delta.)
plot(hexbin(dataPep$pepLen,dataPep$Retention..Delta.))
library(ggplot2)
plot(hexbin(dataPep$pepLen,dataPep$Retention..Delta.))
install.packages('hexbin')
library(hexbin)
plot(hexbin(dataPep$pepLen,dataPep$Retention..Delta.))
hist(dataPep$Retention..Delta., breaks = 100)
hist(dataPep$Retention..Delta., breaks = 1000)
ggplot(data=dataPep, aes(x=Retention..Delta.)) + geom_hist()
source('~/Projects/ProteoDNN/PTMdrag/Exploration.R', echo=TRUE)
ggplot(data=dataPep, aes(x=Retention..Delta.)) + geom_histogram()
ggplot(data=dataPep, aes(x=Retention..Delta.)) + geom_histogram(bins=100)
ggplot(data=dataPep, aes(x=Retention..Delta.))+
geom_histogram(bins=100, fill='steelblue')+
theme_bw()
hist(dataPep$pepLen)
summary(dataPep$pepLen)
dataPep$RetDcuts = cut(dataPep$pepLen, breaks = c(5,11,15,20,60))
ggplot(data=dataPep, aes(x=Retention..Delta.))+
geom_histogram(bins=100, fill='steelblue')+
facet_grid(.~RetDcuts)
theme_bw()
length(unique(dataPep$pepLen))
barplot(dataPep$pepLen)
barplot(table(dataPep$pepLen))
ggplot(data=dataPep, aes(x=Retention..Delta., y=pepLen))+
geom_density_2d()+
theme_bw()
names(dataPep)
ggplot(data=dataPep, aes(x=Retention..Delta., y=))+
geom_density_2d()+
facet_grid(.~X.L.Mass)
theme_bw()
ggplot(data=dataPep, aes(x=Retention..Delta., y=pepLen))+
geom_density_2d()+
facet_grid(.~RetDCuts)
theme_bw()
names(dataPep)
ggplot(data=dataPep, aes(x=Retention..Delta., y=X.L.Mass))+
geom_density_2d()+
theme_bw()
ggplot(data=dataPep, aes(x=Retention..Delta., y=X.L.m.z))+
geom_density_2d()+
theme_bw()
